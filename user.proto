syntax = "proto3";

package goosechase.data.user;

option go_package = "./proto";

enum Role {
  Admin = 0;
  User = 1;
}

message User {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string tenant_id = 4;
  string email = 5;
  string sub = 6;
  optional string bio = 7;
  bool is_production = 8;
  string overwrite_prospect_email = 9;
  Role role = 10;
}

message FindOneRequest { string user_id = 1; }

message FindOneResult { User result = 1; }

message FindManyRequest {
  optional string query = 1;
  string tenant_id = 2;
}

message FindManyResult { repeated User results = 1; }

message SetDemoModeRequest {
  bool is_production = 1;
  string user_id = 2;
  string overwrite_prospect_email = 3;
}

message SetDemoModeResult {
  User result = 1;
  string status = 2;
}

message InviteUserRequest {
  string first_name = 1;
  string last_name = 2;
  string tenant_id = 3;
  string email = 4;
  string sub = 5;
  optional string bio = 6;
  bool is_production = 7;
  string overwrite_prospect_email = 8;
  Role role = 9;
}

message InviteUserResponse {
  User result = 1;
  string status = 2;
}

service UserService {
  rpc FindOne(FindOneRequest) returns (FindOneResult);
  rpc FindMany(FindManyRequest) returns (FindManyResult);
  rpc SetDemoMode(SetDemoModeRequest) returns (SetDemoModeResult);
  rpc InviteUser(InviteUserRequest) returns (InviteUserResponse);
}
